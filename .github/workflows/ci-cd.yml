name: ExtBridge CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        JWT_SECRET: ${{ secrets.JWT_SECRET }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  deploy-development:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: |
      (github.ref == 'refs/heads/develop' && github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'development')
    environment: development

    steps:
    - uses: actions/checkout@v3

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Build and push Docker image
      run: |
        gcloud auth configure-docker
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/extbridge-dev:${{ github.sha }} .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/extbridge-dev:${{ github.sha }}

    - name: Deploy to Cloud Run (Development)
      id: deploy-dev
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: extbridge-dev
        image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/extbridge-dev:${{ github.sha }}
        region: asia-northeast1
        env_vars: |
          NODE_ENV=development
          PORT=8080
        secrets: |
          MONGODB_URI=mongodb-uri:latest
          JWT_SECRET=jwt-secret:latest
          SAML_ENTRY_POINT=saml-entry-point:latest
          SAML_ISSUER=saml-issuer:latest
          SAML_CALLBACK_URL=saml-callback-url:latest
          GITHUB_CLIENT_ID=github-client-id:latest
          GITHUB_CLIENT_SECRET=github-client-secret:latest
          GITHUB_CALLBACK_URL=github-callback-url:latest
          FIGMA_CLIENT_ID=figma-client-id:latest
          FIGMA_CLIENT_SECRET=figma-client-secret:latest
          FIGMA_CALLBACK_URL=figma-callback-url:latest
          SLACK_CLIENT_ID=slack-client-id:latest
          SLACK_CLIENT_SECRET=slack-client-secret:latest
          SLACK_CALLBACK_URL=slack-callback-url:latest

    - name: Show Development URL
      run: echo "Development application deployed to ${{ steps.deploy-dev.outputs.url }}"

  deploy-staging:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: |
      (github.ref == 'refs/heads/staging' && github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment: staging

    steps:
    - uses: actions/checkout@v3

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Build and push Docker image
      run: |
        gcloud auth configure-docker
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/extbridge-staging:${{ github.sha }} .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/extbridge-staging:${{ github.sha }}

    - name: Deploy to Cloud Run (Staging)
      id: deploy-staging
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: extbridge-staging
        image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/extbridge-staging:${{ github.sha }}
        region: asia-northeast1
        env_vars: |
          NODE_ENV=staging
          PORT=8080
        secrets: |
          MONGODB_URI=mongodb-uri:latest
          JWT_SECRET=jwt-secret:latest
          SAML_ENTRY_POINT=saml-entry-point:latest
          SAML_ISSUER=saml-issuer:latest
          SAML_CALLBACK_URL=saml-callback-url:latest
          GITHUB_CLIENT_ID=github-client-id:latest
          GITHUB_CLIENT_SECRET=github-client-secret:latest
          GITHUB_CALLBACK_URL=github-callback-url:latest
          FIGMA_CLIENT_ID=figma-client-id:latest
          FIGMA_CLIENT_SECRET=figma-client-secret:latest
          FIGMA_CALLBACK_URL=figma-callback-url:latest
          SLACK_CLIENT_ID=slack-client-id:latest
          SLACK_CLIENT_SECRET=slack-client-secret:latest
          SLACK_CALLBACK_URL=slack-callback-url:latest

    - name: Show Staging URL
      run: echo "Staging application deployed to ${{ steps.deploy-staging.outputs.url }}"

  deploy-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: |
      (github.ref == 'refs/heads/main' && github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment: production

    steps:
    - uses: actions/checkout@v3

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Build and push Docker image
      run: |
        gcloud auth configure-docker
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/extbridge:${{ github.sha }} .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/extbridge:${{ github.sha }}
        docker tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/extbridge:${{ github.sha }} gcr.io/${{ secrets.GCP_PROJECT_ID }}/extbridge:latest
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/extbridge:latest

    - name: Deploy to Cloud Run (Production)
      id: deploy-prod
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: extbridge
        image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/extbridge:${{ github.sha }}
        region: asia-northeast1
        env_vars: |
          NODE_ENV=production
          PORT=8080
        secrets: |
          MONGODB_URI=mongodb-uri:latest
          JWT_SECRET=jwt-secret:latest
          SAML_ENTRY_POINT=saml-entry-point:latest
          SAML_ISSUER=saml-issuer:latest
          SAML_CALLBACK_URL=saml-callback-url:latest
          GITHUB_CLIENT_ID=github-client-id:latest
          GITHUB_CLIENT_SECRET=github-client-secret:latest
          GITHUB_CALLBACK_URL=github-callback-url:latest
          FIGMA_CLIENT_ID=figma-client-id:latest
          FIGMA_CLIENT_SECRET=figma-client-secret:latest
          FIGMA_CALLBACK_URL=figma-callback-url:latest
          SLACK_CLIENT_ID=slack-client-id:latest
          SLACK_CLIENT_SECRET=slack-client-secret:latest
          SLACK_CALLBACK_URL=slack-callback-url:latest

    - name: Show Production URL
      run: echo "Production application deployed to ${{ steps.deploy-prod.outputs.url }}"
